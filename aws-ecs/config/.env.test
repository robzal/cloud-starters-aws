# Account & Region parameters
export PRIMARY_REGION=ap-southeast-2
export SECONDARY_REGIONS=

export ENVIRONMENT=test
export AWS_ACCOUNT=${TEST_ACCOUNT}
export AWS_REGION=${PRIMARY_REGION}
export REGION_EXTENSION=

# Deployment parameters
export LOGGING_BUCKET=${AWS_ACCOUNT}-logging${REGION_EXTENSION}
export CHANGESET_OPTION=--no-execute-changeset
# export CHANGESET_OPTION=

# CICD parameters
export DEPLOYMENT_ROLE_ARN=
# set deployment-role-arn to use an existing role or to create on in another account separately to the pipeline stack 
export DEPLOYMENT_ROLE_ARN=${DEPLOYMENT_ROLE_ARN_TEST}


# Workload parameters
export CLUSTER_NAME_FARGATE=${APP_CODE}-${ENVIRONMENT}-Fargate-Cluster
export CLUSTER_NAME_LINUX=${APP_CODE}-${ENVIRONMENT}-Linux-Cluster
export CLUSTER_NAME_WINDOWS=${APP_CODE}-${ENVIRONMENT}-Windows-Cluster
# https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_AMI.html
export LINUX_INSTANCE_AMI=ami-0491e5996daa9cc6a
export LINUX_INSTANCE_KEY=AWS-robzal
# https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-optimized_windows_AMI.html
export WINDOWS_INSTANCE_AMI=ami-018ecf5abe9c87802
export WINDOWS_INSTANCE_KEY=AWS-robzal

export CLUSTER_VPCID=vpc-0fb7e6007f08f4f95
export CLUSTER_VPC_CIDR=10.30.0.0/16
export CLUSTER_SUBNET1=subnet-0eaceed0a9e3aa6bc
export CLUSTER_SUBNET2=subnet-03e1312dbdc99cbb2
export LOAD_BALANCER_SUBNET1=subnet-0c085fed9aa3201a5
export LOAD_BALANCER_SUBNET2=subnet-057729838d1a85197

export LOAD_BALANCER_SSL_CERT=arn:aws:acm:${PRIMARY_REGION}:${TEST_ACCOUNT}:certificate/305e4e6b-a60d-4465-8f70-33dd0fc3c34a
export LOAD_BALANCER_R53_ALIAS_DOMAIN=${ORG_AWS_DOMAIN}.
export LOAD_BALANCER_R53_ALIAS_HOSTNAME=${APP_CODE}-${ENVIRONMENT}-service-alb
