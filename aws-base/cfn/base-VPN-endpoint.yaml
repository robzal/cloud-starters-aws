  AWSTemplateFormatVersion: "2010-09-09"
  Description: "Creates VPN Client Endpoint for VPCs"
  Parameters:
    VPCID:
      Description: The VPC ID of the VPC being conncted to.
      Type: String
      Default: ""
    VPCName:
      Description: The name of the Target VPC for tagging purposes.
      Type: String
      Default: "MyOrgVPC"
    VPCCIDRRange:
      Description: The CIDR Range of the Target VPC.
      Type: String
      Default: "10.0.0.0/16"
    CreateClientVPN:
      Description: Create or remove VPN Client Endpoint.
      Type: String
      Default: false
      AllowedValues: [true, false]
    VPNCIDRRange:
      Description: The CIDR Block issued by the VPN endpoint.
      Type: String
      Default: "10.240.0.0/22"
    VPNTargetSubnetID:
      Description: The subnet ID to attached the VPN endpoint to.
      Type: String
      Default: "subnet-0f95dfdd34cb4c53c"
    VPNSecurityGroupIDs:
      Description: The subnet ID to attached the VPN endpoint to.
      Type: CommaDelimitedList
      Default: "sg-0f91af3db8e19143c"
    VPNServerCertificateArn:
      Description: The arn of a server certificate for the VPN endpoint to use.
      Type: String
      Default: 'arn:aws:acm:ap-southeast-2:238160719262:certificate/da07208b-b251-4225-aefc-924cec6382fa'
    VPNClientCertificateArn:
      Description: The arn of a client certificate for the VPN endpoint to use.
      Type: String
      Default: 'arn:aws:acm:ap-southeast-2:238160719262:certificate/da07208b-b251-4225-aefc-924cec6382fa'
  Conditions:
    ShouldCreateVPN:
      !Equals [true, !Ref CreateClientVPN]
  Resources:
    VpnClientEndpoint:
      Type: AWS::EC2::ClientVpnEndpoint
      Condition: ShouldCreateVPN
      Properties: 
        AuthenticationOptions:
        - Type: "certificate-authentication"
          MutualAuthentication:
            ClientRootCertificateChainArn: !Ref VPNClientCertificateArn
        ClientCidrBlock: !Ref VPNCIDRRange
        ConnectionLogOptions: 
          Enabled: true
          CloudwatchLogGroup: !Ref VpnClientEndpointLogGroup
        Description: "Client VPN Endpoint"
        SecurityGroupIds: !Ref VPNSecurityGroupIDs
        SelfServicePortal: enabled
        ServerCertificateArn: !Ref VPNServerCertificateArn
        SplitTunnel: true
        TransportProtocol: "tcp"
        VpcId: !Ref VPCID
        VpnPort: 1194
        TagSpecifications:
          - ResourceType: "client-vpn-endpoint"
            Tags:
            - Key: 'Name'
              Value: !Sub 'VPN for ${VPCName} VPC'
    VpnClientEndpointLogGroup:
      Type: 'AWS::Logs::LogGroup'
      Properties:
        LogGroupName: !Sub 'aws-vpc-client-endpoint-logs-${AWS::AccountId}'
    VpnClientEndpointAssociation:
      Type: AWS::EC2::ClientVpnTargetNetworkAssociation
      Condition: ShouldCreateVPN
      Properties: 
        ClientVpnEndpointId: !Ref VpnClientEndpoint
        SubnetId: !Ref VPNTargetSubnetID
    VpnClientEndpointAuthorisation:
      Type: AWS::EC2::ClientVpnAuthorizationRule
      Condition: ShouldCreateVPN
      Properties: 
        AuthorizeAllGroups: true
        ClientVpnEndpointId: !Ref VpnClientEndpoint
        Description: !Sub '${VPCName} VPC Access'
        TargetNetworkCidr: !Ref VPCCIDRRange
    # VpnClientEndpointPeeredRoute:
    #   Type: AWS::EC2::ClientVpnRoute
    #   Condition: ShouldCreateVPN
    #   DependsOn: VpnClientEndpointAssociation
    #   Properties: 
    #     ClientVpnEndpointId: !Ref VpnClientEndpoint
    #     Description:  !Sub '${VPCName} VPC Route'
    #     DestinationCidrBlock: !Ref VPCCIDRRange
    #     TargetVpcSubnetId: !Ref VPNTargetSubnetID
