AWSTemplateFormatVersion: '2010-09-09'
Description: Creates basic mgmt S3 buckets and policies
Parameters:
  CreateCustomerKMSKey:
    Description: Use a CMK KMS Key for Cloudformation bucket (for cross account access)
    Type: String
    Default: "false"
    AllowedValues:
      - 'true'
      - 'false'
Conditions:
  UseCMKKMS: !Equals 
    - !Ref CreateCustomerKMSKey
    - "true"

Resources:
  BucketKMSKey:
    Type: AWS::KMS::Key
    Condition: UseCMKKMS
    Properties:
      Description: Used by Assumed Roles in Dev/Prod accounts to Encrypt/Decrypt code
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Id: !Ref AWS::StackName
        Statement:
          -
            Sid: Allows admin of the key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:*"
            Resource: "*"
          -
            Sid: Allow use of the key By cross account identities if requested
            Effect: Allow
            Principal:
              AWS: '${AWS::AccountId}'
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
  BucketKMSKeyAlias:
    Type: AWS::KMS::Alias
    Condition: UseCMKKMS
    Properties:
      AliasName: !Sub alias/platform-bucket-key
      TargetKeyId: !Ref BucketKMSKey
  LoggingBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub '${AWS::AccountId}-logging'
      AccessControl: 'LogDeliveryWrite'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:  !If [ UseCMKKMS, !Ref BucketKMSKey, !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3']
              SSEAlgorithm: 'aws:kms'
  ConfigBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub '${AWS::AccountId}-awsconfig'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:  !If [ UseCMKKMS, !Ref BucketKMSKey, !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3']
              SSEAlgorithm: 'aws:kms'
      LoggingConfiguration:
        DestinationBucketName: !Sub '${AWS::AccountId}-logging'
        LogFilePrefix: s3serveraccesslogs/awsconfig
  CloudtrailBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub '${AWS::AccountId}-cloudtrail'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:  !If [ UseCMKKMS, !Ref BucketKMSKey, !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3']
              SSEAlgorithm: 'aws:kms'
      LoggingConfiguration:
        DestinationBucketName: !Sub '${AWS::AccountId}-logging'
        LogFilePrefix: s3serveraccesslogs/cloudtrail
  CloudTrailBucketPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref CloudtrailBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: "cloudtrail.amazonaws.com"
          Action: "s3:GetBucketAcl"
          Resource: !Sub "arn:aws:s3:::${CloudtrailBucket}"
        - Effect: Allow
          Principal:
            Service: "cloudtrail.amazonaws.com"
          Action: "s3:PutObject"
          Resource: !Sub "arn:aws:s3:::${CloudtrailBucket}/AWSLogs/${AWS::AccountId}/*"
  UtilitiesBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Sub '${AWS::AccountId}-utilities'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              KMSMasterKeyID:  !If [ UseCMKKMS, !Ref BucketKMSKey, !Sub 'arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3']
              SSEAlgorithm: 'aws:kms'
      LoggingConfiguration:
        DestinationBucketName: !Sub '${AWS::AccountId}-logging'
        LogFilePrefix: s3serveraccesslogs/utilities

Outputs:
  LoggingBucket:
    Value: !Ref LoggingBucket
    Export:
      Name: !Sub 'Logging-bucket'
  ConfigBucket:
    Value: !Ref ConfigBucket
    Export:
      Name: !Sub 'AWSConfig-bucket'
  CloudtrailBucket:
    Value: !Ref CloudtrailBucket
    Export:
      Name: !Sub 'Cloudtrail-bucket'
  UtilitiesBucket:
    Value: !Ref UtilitiesBucket
    Export:
      Name: !Sub 'Utilities-bucket'
