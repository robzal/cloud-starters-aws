  AWSTemplateFormatVersion: "2010-09-09"
  Description: "Creates a VPC peering connections and/or peering routes"
  Parameters:
    CreatePeeringConnection:
      Description: Create or remove VPC Peering Connection.
      Type: String
      Default: true
      AllowedValues: [true, false]
    CreatePeeringRoute:
      Description: Create or remove Route table entries for the VPC Peering Connection.
      Type: String
      Default: true
      AllowedValues: [true, false]
    PeerVPCID:
      Description: The VPC ID of the VPC being peered to.
      Type: String
      Default: ""
    PeerVPCAccountID:
      Description: The accountID containing the VPC to peer to.
      Type: String
      Default: "238160719262"
    PeerVPCRoleArn:
      Description: The arn of the peering role to assume.
      Type: String
    PeerVPCCIDRBlock:
      Description: The CIDR Block of the Peered VPC.
      Type: String
      Default: "10.0.0.0/16"
    PeerVPCConnection:
      Description: The Existing Peering Connection ID of the Peered VPC to route to.
      Type: String
      Default: ""
    LocalVPCID:
      Description: The VPC ID of the VPC being peered from.
      Type: String
      Default: ""
    LocalPublicRouteTableID:
      Description: The route table ID for the local VPC public subnet.
      Type: String
      Default: "rtb-11112222"
    LocalPrivateRouteTableAZ1ID:
      Description: The route table ID for the local VPC public subnet.
      Type: String
      Default: "rtb-11112222"
    LocalPrivateRouteTableAZ2ID:
      Description: The route table ID for the local VPC public subnet.
      Type: String
      Default: "rtb-11112222"
  Conditions:
    ShouldCreatePeeringConnection: !And
      - !Equals [ 'true', !Ref CreatePeeringConnection ]
      - !Not [ !Equals [ '', !Ref PeerVPCID ] ]
    ShouldCreatePeeringRoute: !And
      - !Equals [ 'true', !Ref CreatePeeringRoute]
      - !Not [!Equals ['', !Ref PeerVPCConnection]]
  Resources:
    VPCPeeringConnection:
      Type: 'AWS::EC2::VPCPeeringConnection'
      Condition: ShouldCreatePeeringConnection
      Properties:
        VpcId: !Ref LocalVPCID
        PeerVpcId: !Ref PeerVPCID
        PeerOwnerId: !Ref PeerVPCAccountID
        PeerRegion: !Sub '${AWS::Region}'
        PeerRoleArn: !Ref PeerVPCRoleArn
    PublicRouteToPeeredVPC:
      Type: 'AWS::EC2::Route'
      Condition: ShouldCreatePeeringRoute
      Properties:
        DestinationCidrBlock: !Ref PeerVPCCIDRBlock
        RouteTableId: !Ref LocalPublicRouteTableID
        VpcPeeringConnectionId: !Ref PeerVPCConnection
    PrivateRouteToPeeredVPC0:
      Type: 'AWS::EC2::Route'
      Condition: ShouldCreatePeeringRoute
      Properties:
        DestinationCidrBlock: !Ref PeerVPCCIDRBlock
        RouteTableId: !Ref LocalPrivateRouteTableAZ1ID
        VpcPeeringConnectionId: !Ref PeerVPCConnection
    PrivateRouteToPeeredVPC1:
      Type: 'AWS::EC2::Route'
      Condition: ShouldCreatePeeringRoute
      Properties:
        DestinationCidrBlock: !Ref PeerVPCCIDRBlock
        RouteTableId: !Ref LocalPrivateRouteTableAZ2ID
        VpcPeeringConnectionId: !Ref PeerVPCConnection
