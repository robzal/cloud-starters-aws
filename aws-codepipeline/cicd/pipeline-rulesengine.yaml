AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Template for fancy commitid event based pipeline in AWS
  Creates a Build and single Account Deploy Code Pipeline calling shell scripts to run build and deploy actions

Parameters:
    AppCode:
        Type: String
        Default: codepipeline-demo-rulesengine
        Description: Short Name for the Application being deployed in this pipeline, to be used in resource and stack names
    PipelineBucket:
        Type: String
        Default: 238160719262-pipelines
        Description: Name of S3 bucket for CodePipeline to use
    PipelineBucketKMSKeyAliasARN:
        Type: String
        Default: arn:aws:kms:ap-southeast-2:238160719262:key/784d1ffe-4317-452c-b6d3-7d2b7f4b612b
        Description: ARN of KMS key used for S3 pipeline bucket encryption
    CloudformationBucket:
        Type: String
        Default: 238160719262-cloudformation
        Description: Name of S3 bucket for Cloudformation Templates
    BuildBucket:
        Type: String
        Default: 238160719262-builds
        Description: Name of S3 bucket for build artefacts 
    CodeBuildImage:
        Type: String
        Default: "aws/codebuild/standard:7.0"
        Description: Name of the image to use for the CodeBuild container
    CodeBuildCompute:
      Type: String
      Default: "BUILD_GENERAL1_SMALL"
      Description: Container Size to use for the CodeBuild container
    CodeBuildType:
      Type: String
      Default: "LINUX_CONTAINER"
      Description: Compute Architecture to use for the CodeBuild container
    CodeCommitRepoName:
        Type: String
        Default: pipeline-test
        Description: Name of the CodeCommit Repo comtaining source to deploy with the pipeline
    BuildRoleARN:
        Type: String
        Default: arn:aws:iam::238160719262:role/DeploymentAdmin
        Description: ARN of the deployment role to assume in the target account when deploying cloudformation templates and CLI calls
    DevAccountDeploymentRoleARN:
        Type: String
        Default: arn:aws:iam::967792619409:role/Admins
        Description: ARN of the deployment role to assume in the dev account when deploying cloudformation template
    TestAccountDeploymentRoleARN:
        Type: String
        Default: arn:aws:iam::967792619409:role/Admins
        Description: ARN of the deployment role to assume in the test account when deploying cloudformation template
    ProdAccountDeploymentRoleARN:
        Type: String
        Default: arn:aws:iam::271005954527:role/Admins
        Description: ARN of the deployment role to assume in the prod account when deploying cloudformation template
    LambdaBucket:
      Type: String
      Default: "238160719262-deployments"
      Description: Bucket that holds the pipeline event lambda code files
    CodeCommitEventFunctionBucketKey:
      Type: String
      Default: "PipelineCommitEventFunction_1.0.0.zip"
      Description: Name of the code file for the CodeCommit Event Lambda
    CodeCommitFetchFunctionBucketKey:
      Type: String
      Default: "PipelineCommitFetchFunction_1.0.0.zip"
      Description: Name of the code file for the Git Fetch Lambda
    NextExecutionFunctionBucketKey:
      Type: String
      Default: "PipelineNextExecutionFunction_1.0.0.zip"
      Description: Name of the code file for the Next Pipeline Check Lambda
    DevPipelineName:
        Type: String
        Default: codepipeline-demo-dev-pipeline
        Description: Name and reference for dev pipeline
    TestPipelineName:
        Type: String
        Default: codepipeline-demo-test-pipeline
        Description: Name and reference for test pipeline
    ProdPipelineName:
        Type: String
        Default: codepipeline-demo-prod-pipeline
        Description: Name and reference for prod pipeline
    PipelineEventsBucketName:
        Type: String
        Default: 238160719262-pipeline-events
        Description: Name of S3 bucket for commit trigger files         

Resources:
    BuildProjectLogGroup:
      Type: 'AWS::Logs::LogGroup'
      Properties:
        LogGroupName: !Sub '/aws/codebuild/${AppCode}-build-project'
        RetentionInDays: 14
    BuildProject:
        Type: AWS::CodeBuild::Project
        Properties:
            Name: !Sub ${AppCode}-build-project
            EncryptionKey: !Ref PipelineBucketKMSKeyAliasARN
            Artifacts:
                Type: CODEPIPELINE
            Environment: 
                Type: LINUX_CONTAINER
                ComputeType: !Ref CodeBuildCompute
                Image: !Ref CodeBuildImage
                PrivilegedMode: true
                EnvironmentVariables:
                  - Name: BUILD_OUTPUT_BUCKET
                    Value: !Ref BuildBucket
                  - Name: CLOUDFORMATION_BUCKET
                    Value: !Ref CloudformationBucket
            ServiceRole: !GetAtt PipelineRole.Arn
            Source: 
                Type: CODEPIPELINE
                BuildSpec: cicd/buildspec-rulesengine.yaml
    PipelinePolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: arn:aws:logs:*:*:*
            - Effect: Allow
              Action:
                - ecr:InitiateLayerUpload
              Resource: arn:aws:ecr:ap-southeast-2:*:repository/*
            - Effect: Allow
              Action: 
                - 's3:*'
              Resource:
                - !Sub 'arn:aws:s3:::${PipelineBucket}/*'
                - !Sub 'arn:aws:s3:::${PipelineBucket}'
                - !Sub 'arn:aws:s3:::${CloudformationBucket}/*'
                - !Sub 'arn:aws:s3:::${CloudformationBucket}'
                - !Sub 'arn:aws:s3:::${BuildBucket}/*'
                - !Sub 'arn:aws:s3:::${BuildBucket}'
                - !Sub 'arn:aws:s3:::${PipelineEventsBucketName}/*'
                - !Sub 'arn:aws:s3:::${PipelineEventsBucketName}'
            - Effect: Allow
              Action:
                - 'iam:PassRole'
                - 'codepipeline:PutJobSuccessResult'
                - 'codepipeline:PutJobFailureResult'
                - 'lambda:InvokeFunction'
                - 'ecr:*'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'codecommit:*'
              Resource: 
                - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepoName}'
            - Effect: Allow
              Action:
                - 'codebuild:StartBuild'
                - 'codebuild:BatchGetBuilds'
              Resource: 
                - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AppCode}-build-project'
                - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AppCode}-build-project'
            # - Effect: Allow
            #   Action:
            #     - 'kms:*'
            #   Resource: 
            #     - !Ref PipelineBucketKMSKeyAliasARN
            - Effect: Allow
              Action:
                - sts:AssumeRole
              Resource: 
                - !Ref BuildRoleARN
                - !Ref DevAccountDeploymentRoleARN
                - !Ref TestAccountDeploymentRoleARN
                - !Ref ProdAccountDeploymentRoleARN
    PipelineRole:
      Type: AWS::IAM::Role
      Properties:
          RoleName: !Sub '${AppCode}-CodePipeline-Role'
          AssumeRolePolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action: 
                  - 'sts:AssumeRole'
                  Effect: Allow
                  Principal:
                    Service: 
                      - codepipeline.amazonaws.com
                - Action: 
                  - 'sts:AssumeRole'
                  Effect: Allow
                  Principal:
                    Service: 
                      - codebuild.amazonaws.com
                - Action: 
                  - 'sts:AssumeRole'
                  Effect: Allow
                  Principal:
                    Service: 
                      - lambda.amazonaws.com
          Path: /
          ManagedPolicyArns:
              - !Ref PipelinePolicy
    PipelineDev:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            ArtifactStore: 
                Location: !Ref PipelineBucket
                Type: S3
                EncryptionKey:
                  Id: !Ref PipelineBucketKMSKeyAliasARN
                  Type: KMS
            Name: !Sub ${DevPipelineName}
            RoleArn: !GetAtt PipelineRole.Arn
            Stages:
                - Name: Source
                  Actions:
                    - Name: SourceTrigger
                      ActionTypeId:
                        Category: Source
                        Owner: AWS
                        Provider: S3
                        Version: 1
                      Configuration:
                        S3Bucket: !Ref PipelineEventsBucketName
                        S3ObjectKey:  !Sub 'events/${AppCode}/${DevPipelineName}'
                        PollForSourceChanges: 'true'
                      OutputArtifacts:
                        - Name: SourceZip
                      RunOrder: 1
                - Name: CommitFetch
                  Actions:
                    - Name: CommitFetch
                      Namespace: pipelinevariables
                      ActionTypeId:
                        Category: Invoke
                        Owner: AWS
                        Provider: Lambda
                        Version: 1
                      Configuration:
                        FunctionName: !Ref PipelineCommitFetchFunction
                        UserParameters: !Sub '{
                          "APP_CODE": "${AppCode}", 
                          "PIPELINE_NAME": " ${DevPipelineName}",
                          "REPOSITORY_NAME": "${CodeCommitRepoName}", 
                          "FETCH_FILE_LIST": "buildspec.yaml,buildspec-rulesengine.yaml"
                          }'                
                      InputArtifacts:
                        - Name: SourceZip
                      OutputArtifacts:
                        - Name: CommitZip
                      RunOrder: 1
                - Name: DeployDev
                  Actions:
                    - Name: PackageDeployment
                      Namespace: buildvariables
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref BuildProject
                        EnvironmentVariables: !Sub '[
                          {"name":"DEPLOYMENT_ROLE","value":"${DevAccountDeploymentRoleARN}","type":"PLAINTEXT"},
                          {"name":"APP_CODE","value":"#{pipelinevariables.app_code}","type":"PLAINTEXT"},
                          {"name":"PIPELINE_NAME","value":"#{pipelinevariables.pipeline_name}","type":"PLAINTEXT"},
                          {"name":"REPOSITORY_NAME","value":"#{pipelinevariables.repository_name}","type":"PLAINTEXT"},
                          {"name":"BRANCH_NAME","value":"#{pipelinevariables.branch_name}","type":"PLAINTEXT"},
                          {"name":"COMMIT_ID","value":"#{pipelinevariables.commit_id}","type":"PLAINTEXT"},
                          {"name":"STACK_NAME","value":"#{pipelinevariables.stack_name}","type":"PLAINTEXT"},
                          {"name":"ENV_FILE","value":"#{pipelinevariables.env_file}","type":"PLAINTEXT"},
                          {"name":"ENVIRONMENT","value":"#{pipelinevariables.environment}","type":"PLAINTEXT"},
                          {"name":"PARAMS","value":"#{pipelinevariables.params}","type":"PLAINTEXT"}
                          ]'
                      InputArtifacts:
                        - Name: CommitZip
                      OutputArtifacts:
                        - Name: BuildZip
                      RunOrder: 1
                - Name: PostProcess
                  Actions:
                    - Name: PostProcess
                      Namespace: PostProcess
                      ActionTypeId:
                        Category: Invoke
                        Owner: AWS
                        Provider: Lambda
                        Version: 1
                      Configuration:
                        FunctionName: !Ref PipelineNextExecutionFunction
                        UserParameters: !Sub '{
                        "APP_CODE": "#{pipelinevariables.app_code}", 
                        "PIPELINE_NAME": "#{pipelinevariables.pipeline_name}",
                        "REPOSITORY_NAME": "#{pipelinevariables.repository_name}", 
                        "BRANCH_NAME": "#{pipelinevariables.branch_name}",
                        "COMMIT_ID": "#{pipelinevariables.commit_id}", 
                        "STACK_NAME": "#{pipelinevariables.stack_name}",
                        "ENVIRONMENT": "#{pipelinevariables.environment}", 
                        "ENV_FILE": "#{pipelinevariables.env_file}",
                        "PARAMS": "#{buildvariables.PARAMS}"
                        }'             
                      InputArtifacts:
                        - Name: CommitZip
                      RunOrder: 1
    PipelineTest:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            ArtifactStore: 
                Location: !Ref PipelineBucket
                Type: S3
                EncryptionKey:
                  Id: !Ref PipelineBucketKMSKeyAliasARN
                  Type: KMS
            Name: !Sub ${TestPipelineName}
            RoleArn: !GetAtt PipelineRole.Arn
            Stages:
                - Name: Source
                  Actions:
                    - Name: SourceTrigger
                      ActionTypeId:
                        Category: Source
                        Owner: AWS
                        Provider: S3
                        Version: 1
                      Configuration:
                        S3Bucket: !Ref PipelineEventsBucketName
                        S3ObjectKey:  !Sub 'events/${AppCode}/${TestPipelineName}'
                        PollForSourceChanges: 'true'
                      OutputArtifacts:
                        - Name: SourceZip
                      RunOrder: 1
                - Name: Approval
                  Actions:
                    - Name: TestApproval
                      ActionTypeId:
                        Category: Approval
                        Owner: AWS
                        Provider: Manual
                        Version: 1
                      RunOrder: 1                    
                - Name: CommitFetch
                  Actions:
                    - Name: CommitFetch
                      Namespace: pipelinevariables
                      ActionTypeId:
                        Category: Invoke
                        Owner: AWS
                        Provider: Lambda
                        Version: 1
                      Configuration:
                        FunctionName: !Ref PipelineCommitFetchFunction
                        UserParameters: !Sub '{
                          "APP_CODE": "${AppCode}", 
                          "PIPELINE_NAME": " ${TestPipelineName}",
                          "REPOSITORY_NAME": "${CodeCommitRepoName}", 
                          "FETCH_FILE_LIST": "buildspec.yaml,buildspec-rulesengine.yaml"
                          }'                
                      InputArtifacts:
                        - Name: SourceZip
                      OutputArtifacts:
                        - Name: CommitZip
                      RunOrder: 1
                - Name: DeployTest
                  Actions:
                    - Name: PackageDeployment
                      Namespace: buildvariables
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref BuildProject
                        EnvironmentVariables: !Sub '[
                          {"name":"DEPLOYMENT_ROLE","value":"${TestAccountDeploymentRoleARN}","type":"PLAINTEXT"},
                          {"name":"APP_CODE","value":"#{pipelinevariables.app_code}","type":"PLAINTEXT"},
                          {"name":"PIPELINE_NAME","value":"#{pipelinevariables.pipeline_name}","type":"PLAINTEXT"},
                          {"name":"REPOSITORY_NAME","value":"#{pipelinevariables.repository_name}","type":"PLAINTEXT"},
                          {"name":"BRANCH_NAME","value":"#{pipelinevariables.branch_name}","type":"PLAINTEXT"},
                          {"name":"COMMIT_ID","value":"#{pipelinevariables.commit_id}","type":"PLAINTEXT"},
                          {"name":"STACK_NAME","value":"#{pipelinevariables.stack_name}","type":"PLAINTEXT"},
                          {"name":"ENV_FILE","value":"#{pipelinevariables.env_file}","type":"PLAINTEXT"},
                          {"name":"ENVIRONMENT","value":"#{pipelinevariables.environment}","type":"PLAINTEXT"},
                          {"name":"PARAMS","value":"#{pipelinevariables.params}","type":"PLAINTEXT"}
                          ]'
                      InputArtifacts:
                        - Name: CommitZip
                      OutputArtifacts:
                        - Name: BuildZip
                      RunOrder: 1
                - Name: PostProcess
                  Actions:
                    - Name: PostProcess
                      Namespace: PostProcess
                      ActionTypeId:
                        Category: Invoke
                        Owner: AWS
                        Provider: Lambda
                        Version: 1
                      Configuration:
                        FunctionName: !Ref PipelineNextExecutionFunction
                        UserParameters: !Sub '{
                        "APP_CODE": "#{pipelinevariables.app_code}", 
                        "PIPELINE_NAME": "#{pipelinevariables.pipeline_name}",
                        "REPOSITORY_NAME": "#{pipelinevariables.repository_name}", 
                        "BRANCH_NAME": "#{pipelinevariables.branch_name}",
                        "COMMIT_ID": "#{pipelinevariables.commit_id}", 
                        "STACK_NAME": "#{pipelinevariables.stack_name}",
                        "ENVIRONMENT": "#{pipelinevariables.environment}", 
                        "ENV_FILE": "#{pipelinevariables.env_file}",
                        "PARAMS": "#{buildvariables.PARAMS}"
                        }'             
                      InputArtifacts:
                        - Name: CommitZip
                      RunOrder: 1    
    PipelineProd:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            ArtifactStore: 
                Location: !Ref PipelineBucket
                Type: S3
                EncryptionKey:
                  Id: !Ref PipelineBucketKMSKeyAliasARN
                  Type: KMS
            Name: !Sub ${ProdPipelineName}
            RoleArn: !GetAtt PipelineRole.Arn
            Stages:
                - Name: Source
                  Actions:
                    - Name: SourceTrigger
                      ActionTypeId:
                        Category: Source
                        Owner: AWS
                        Provider: S3
                        Version: 1
                      Configuration:
                        S3Bucket: !Ref PipelineEventsBucketName
                        S3ObjectKey:  !Sub 'events/${AppCode}/${ProdPipelineName}'
                        PollForSourceChanges: 'true'
                      OutputArtifacts:
                        - Name: SourceZip
                      RunOrder: 1
                - Name: Approval
                  Actions:
                    - Name: ProdApproval
                      ActionTypeId:
                        Category: Approval
                        Owner: AWS
                        Provider: Manual
                        Version: 1
                      RunOrder: 1                    
                - Name: CommitFetch
                  Actions:
                    - Name: CommitFetch
                      Namespace: pipelinevariables
                      ActionTypeId:
                        Category: Invoke
                        Owner: AWS
                        Provider: Lambda
                        Version: 1
                      Configuration:
                        FunctionName: !Ref PipelineCommitFetchFunction
                        UserParameters: !Sub '{
                          "APP_CODE": "${AppCode}", 
                          "PIPELINE_NAME": " ${ProdPipelineName}",
                          "REPOSITORY_NAME": "${CodeCommitRepoName}", 
                          "FETCH_FILE_LIST": "buildspec.yaml,buildspec-rulesengine.yaml"
                          }'                
                      InputArtifacts:
                        - Name: SourceZip
                      OutputArtifacts:
                        - Name: CommitZip
                      RunOrder: 1
                - Name: DeployProd
                  Actions:
                    - Name: PackageDeployment
                      Namespace: buildvariables
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref BuildProject
                        EnvironmentVariables: !Sub '[
                          {"name":"DEPLOYMENT_ROLE","value":"${ProdAccountDeploymentRoleARN}","type":"PLAINTEXT"},
                          {"name":"APP_CODE","value":"#{pipelinevariables.app_code}","type":"PLAINTEXT"},
                          {"name":"PIPELINE_NAME","value":"#{pipelinevariables.pipeline_name}","type":"PLAINTEXT"},
                          {"name":"REPOSITORY_NAME","value":"#{pipelinevariables.repository_name}","type":"PLAINTEXT"},
                          {"name":"BRANCH_NAME","value":"#{pipelinevariables.branch_name}","type":"PLAINTEXT"},
                          {"name":"COMMIT_ID","value":"#{pipelinevariables.commit_id}","type":"PLAINTEXT"},
                          {"name":"STACK_NAME","value":"#{pipelinevariables.stack_name}","type":"PLAINTEXT"},
                          {"name":"ENV_FILE","value":"#{pipelinevariables.env_file}","type":"PLAINTEXT"},
                          {"name":"ENVIRONMENT","value":"#{pipelinevariables.environment}","type":"PLAINTEXT"},
                          {"name":"PARAMS","value":"#{pipelinevariables.params}","type":"PLAINTEXT"}
                          ]'
                      InputArtifacts:
                        - Name: CommitZip
                      OutputArtifacts:
                        - Name: BuildZip
                      RunOrder: 1
                - Name: PostProcess
                  Actions:
                    - Name: PostProcess
                      Namespace: PostProcess
                      ActionTypeId:
                        Category: Invoke
                        Owner: AWS
                        Provider: Lambda
                        Version: 1
                      Configuration:
                        FunctionName: !Ref PipelineNextExecutionFunction
                        UserParameters: !Sub '{
                        "APP_CODE": "#{pipelinevariables.app_code}", 
                        "PIPELINE_NAME": "#{pipelinevariables.pipeline_name}",
                        "REPOSITORY_NAME": "#{pipelinevariables.repository_name}", 
                        "BRANCH_NAME": "#{pipelinevariables.branch_name}",
                        "COMMIT_ID": "#{pipelinevariables.commit_id}", 
                        "STACK_NAME": "#{pipelinevariables.stack_name}",
                        "ENVIRONMENT": "#{pipelinevariables.environment}", 
                        "ENV_FILE": "#{pipelinevariables.env_file}",
                        "PARAMS": "#{buildvariables.PARAMS}"
                        }'             
                      InputArtifacts:
                        - Name: CommitZip
                      RunOrder: 1    
    PipelineCommitFetchFunctionLogGroup:
      Type: 'AWS::Logs::LogGroup'
      Properties:
        LogGroupName: !Sub '/aws/lambda/${AppCode}-PipelineCommitFetchLambda'
        RetentionInDays: 14
    PipelineCommitFetchFunction:
      Type: AWS::Lambda::Function 
      Properties:
        Code:
          S3Bucket:
              Fn::Sub: "${LambdaBucket}"
          S3Key:
              Fn::Sub: "${CodeCommitFetchFunctionBucketKey}"
        Role:
          Fn::GetAtt:
          - PipelineRole
          - Arn
        Handler: lambda.handler
        Runtime: python3.10
        MemorySize: 128
        Timeout: 300
        FunctionName: !Sub '${AppCode}-PipelineCommitFetchLambda'
        Environment:
          Variables:
            APP_CODE: !Ref AppCode
            REPOSITORY_NAME: !Ref CodeCommitRepoName
            EVENT_BUCKET_NAME: !Ref PipelineEventsBucketName
            EVENT_BUCKET_RULES_KEY: !Sub 'rules/${CodeCommitRepoName}.rules'
    PipelineCommitEventFunctionLogGroup:
      Type: 'AWS::Logs::LogGroup'
      Properties:
        LogGroupName: !Sub '/aws/lambda/${AppCode}-PipelineCommitEventLambda'
        RetentionInDays: 14
    PipelineCommitEventFunction:
      Type: AWS::Lambda::Function
      Properties:
        Code:
          S3Bucket:
              Fn::Sub: "${LambdaBucket}"
          S3Key:
              Fn::Sub: "${CodeCommitEventFunctionBucketKey}"
        Role:
          Fn::GetAtt:
          - PipelineRole
          - Arn
        Handler: lambda.handler
        Runtime: python3.10
        MemorySize: 128
        Timeout: 30
        FunctionName: !Sub '${AppCode}-PipelineCommitEventLambda'
        Environment:
          Variables:
            APP_CODE: !Ref AppCode
            REPOSITORY_NAME: !Ref CodeCommitRepoName
            EVENT_BUCKET_NAME: !Ref PipelineEventsBucketName
            EVENT_BUCKET_RULES_KEY: !Sub 'rules/${CodeCommitRepoName}.rules'
    PipelineNextExecutionFunctionLogGroup:
      Type: 'AWS::Logs::LogGroup'
      Properties:
        LogGroupName: !Sub '/aws/lambda/${AppCode}-PipelineNextExecutionLambda'
        RetentionInDays: 14
    PipelineNextExecutionFunction:
      Type: AWS::Lambda::Function
      Properties:
        Code:
          S3Bucket:
              Fn::Sub: "${LambdaBucket}"
          S3Key:
              Fn::Sub: "${NextExecutionFunctionBucketKey}"
        Role:
          Fn::GetAtt:
          - PipelineRole
          - Arn
        Handler: lambda.handler
        Runtime: python3.10
        MemorySize: 128
        Timeout: 30
        FunctionName: !Sub '${AppCode}-PipelineNextExecutionLambda'
        Environment:
          Variables:
            APP_CODE: !Ref AppCode
            REPOSITORY_NAME: !Ref CodeCommitRepoName
            EVENT_BUCKET_NAME: !Ref PipelineEventsBucketName
            EVENT_BUCKET_RULES_KEY: !Sub 'rules/${CodeCommitRepoName}.rules'           
    CodeCommitListener: 
      Type: AWS::Events::Rule
      Properties: 
        Description: "Code Commit Listener"
        EventPattern:
          source:
            - aws.codecommit
          detail-type:
            - 'CodeCommit Repository State Change'
          resources:
                - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepoName}'
          detail:
            event:
              - referenceCreated
              - referenceUpdated
            repositoryName:
              - !Ref CodeCommitRepoName
        Targets: 
          - 
            Arn: 
              Fn::GetAtt: 
                - PipelineCommitEventFunction
                - Arn
            Id: "CodeCommitEvent"
    CodeCommitListenerPermission:
      Type: AWS::Lambda::Permission
      Properties: 
        FunctionName:  !GetAtt
        - PipelineCommitEventFunction
        - Arn
        Action: lambda:InvokeFunction
        Principal: events.amazonaws.com
        SourceArn: !GetAtt CodeCommitListener.Arn 

    PipelineEventsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: !Ref PipelineEventsBucketName
        VersioningConfiguration:
          Status: Enabled
        BucketEncryption:
          ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: 'AES256'
        LoggingConfiguration:
          DestinationBucketName: !Sub '${AWS::AccountId}-logging'
          LogFilePrefix: s3serveraccesslogs/codepipeline-events
        LifecycleConfiguration:
          Rules:
            - Id: PipelineRule
              Status: Enabled
              ExpirationInDays: 7
