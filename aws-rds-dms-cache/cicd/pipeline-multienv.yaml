AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Creates a Build and multi Account Deploy Code Pipeline calling shell scripts to run build and deploy actions
Parameters:
    AppCode:
        Type: String
        Default: base
        Description: Short Name for the Application being deployed in this pipeline, to be used in resource and stack names

    BuildEnvironment:
      Type: 'String'
      Default: 'shared'
    AdminEnvironment:
      Type: 'String'
      Default: 'admin'
    SharedEnvironment:
      Type: 'String'
      Default: 'shared'
    DevEnvironment:
      Type: 'String'
      Default: 'dev'
    TestEnvironment:
      Type: 'String'
      Default: 'test'
    ProdEnvironment:
      Type: 'String'
      Default: 'prod'

    PipelineBucket:
        Type: String
        Default: 238160719262-pipelines
        Description: Name of S3 bucket for CodePipeline to use
    PipelineBucketKMSKeyAliasARN:
        Type: String
        Default: arn:aws:kms:ap-southeast-2:238160719262:alias/devops-bucket-key
        Description: ARN of KMS key alias used for codepipeline S3 bucket encryption
    CloudformationBucket:
        Type: String
        Default: 238160719262-cloudformation
        Description: Name of S3 bucket for Cloudformation Templates
    BuildBucket:
        Type: String
        Default: 238160719262-builds
        Description: Name of S3 bucket for build artefacts 
    CodeCommitRepoName:
        Type: String
        Default: pipeline-test
        Description: Name of the CodeCommit Repo containing source to build / deploy with the pipeline
    CodeCommitBranchName:
        Type: String
        Default: master
        Description: Name of the CodeCommit Branch for trigger pipeline

    CodePipelineCode:
        Type: String
        Default: multienv
        Description: Style of the Pipeline design
    BuildRoleSuffix:
      Type: String
      Default: Build-Role
      Description: Suffix for IAM Build role being created
    DeploymentRoleSuffix:
      Type: String
      Default: Deployment-Role
      Description: Suffix for IAM Deployment role being created

    DeploymentRoleARNAdmin:
        Type: String
        Default: arn:aws:iam::238160719262:role/DeploymentAdmin
        Description: ARN of the deployment role to assume in the target account when deploying cloudformation templates and CLI calls
    DeploymentRoleARNShared:
        Type: String
        Default: arn:aws:iam::238160719262:role/DeploymentAdmin
        Description: ARN of the deployment role to assume in the target account when deploying cloudformation templates and CLI calls
    DeploymentRoleARNDev:
        Type: String
        Default: arn:aws:iam::238160719262:role/DeploymentAdmin
        Description: ARN of the deployment role to assume in the target account when deploying cloudformation templates and CLI calls
    DeploymentRoleARNTest:
        Type: String
        Default: arn:aws:iam::238160719262:role/DeploymentAdmin
        Description: ARN of the deployment role to assume in the target account when deploying cloudformation templates and CLI calls
    DeploymentRoleARNProd:
        Type: String
        Default: arn:aws:iam::238160719262:role/DeploymentAdmin
        Description: ARN of the deployment role to assume in the target account when deploying cloudformation templates and CLI calls
    CodeBuildImage:
        Type: String
        Default: "aws/codebuild/standard:6.0"
        Description: Name of the image to use for the CodeBuild container
    CodeBuildCompute:
      Type: String
      Default: "BUILD_GENERAL1_SMALL"
      Description: Compute Size to use for the CodeBuild container
    CodeBuildType:
      Type: String
      Default: "LINUX_CONTAINER"
      Description: Compute Architecture to use for the CodeBuild container
    VPCID:
      Type: String
      Default: ""
      Description: The VPC for CodeBuild projects to run in
    VPCSubnetIDs:
      Type: CommaDelimitedList
      Default: ""
      Description: The Subnets for CodeBuild projects to run in. These should be private and use NATGW egress
    VPCSecGroupID:
      Type: String
      Default: ""
      Description: The SecurityGroup for CodeBuild projects to use. It needs Egress Only
Conditions:
  UseVPC: !Not
    - !Equals
      - !Ref  VPCID
      - ""
Resources:
    BuildPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties: 
        Description: Build Role Access"
        Path: "/"
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - '*'
              Resource: '*'
        ManagedPolicyName: !Sub '${AppCode}-${CodePipelineCode}-Build-Policy'
    BuildRole:
      Type: 'AWS::IAM::Role'
      DependsOn: PipelineRole
      Properties:
        RoleName: !Sub '${AppCode}-${CodePipelineCode}-${BuildRoleSuffix}'
        ManagedPolicyArns: 
          - !Ref BuildPolicy
        AssumeRolePolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Principal:
                AWS:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/${AppCode}-${CodePipelineCode}-CodePipeline-Role
              Action: 'sts:AssumeRole'

    BuildProjectLogGroup:
      Type: 'AWS::Logs::LogGroup'
      Properties:
        LogGroupName: !Sub '/aws/codebuild/${AppCode}-${CodePipelineCode}-build-project'
        RetentionInDays: 14
    BuildProject:
        Type: AWS::CodeBuild::Project
        DependsOn: BuildProjectLogGroup
        Properties:
            Name: !Sub ${AppCode}-${CodePipelineCode}-build-project
            EncryptionKey: !Ref PipelineBucketKMSKeyAliasARN
            Artifacts:
                Type: CODEPIPELINE
            Environment: 
                Type: !Ref CodeBuildType
                ComputeType: !Ref CodeBuildCompute
                Image: !Ref CodeBuildImage
                PrivilegedMode: true
                EnvironmentVariables:
                  - Name: BUILD_OUTPUT_BUCKET
                    Value: !Ref BuildBucket
                  - Name: CLOUDFORMATION_BUCKET
                    Value: !Ref CloudformationBucket
            ServiceRole: !GetAtt PipelineRole.Arn
            Source: 
                Type: CODEPIPELINE
                BuildSpec: cicd/buildspec.yaml
            VpcConfig:
              !If
              - UseVPC
              - 
                VpcId: !Ref VPCID
                Subnets: !Ref VPCSubnetIDs
                SecurityGroupIds: 
                  - !Ref VPCSecGroupID
              - !Ref "AWS::NoValue"
    DeployProjectLogGroup:
      Type: 'AWS::Logs::LogGroup'
      Properties:
        LogGroupName: !Sub '/aws/codebuild/${AppCode}-${CodePipelineCode}-deploy-project'
        RetentionInDays: 14
    DeployProject:
        Type: AWS::CodeBuild::Project
        DependsOn: DeployProjectLogGroup
        Properties:
            Name: !Sub ${AppCode}-${CodePipelineCode}-deploy-project
            EncryptionKey: !Ref PipelineBucketKMSKeyAliasARN
            Artifacts:
                Type: CODEPIPELINE
            Environment: 
                Type: !Ref CodeBuildType
                ComputeType: !Ref CodeBuildCompute
                Image: !Ref CodeBuildImage
                PrivilegedMode: true
                EnvironmentVariables:
                  - Name: BUILD_OUTPUT_BUCKET
                    Value: !Ref BuildBucket
                  - Name: CLOUDFORMATION_BUCKET
                    Value: !Ref CloudformationBucket
            ServiceRole: !GetAtt PipelineRole.Arn
            Source: 
                Type: CODEPIPELINE
                BuildSpec: cicd/buildspec-deploy.yaml
            VpcConfig:
              !If
              - UseVPC
              - 
                VpcId: !Ref VPCID
                Subnets: !Ref VPCSubnetIDs
                SecurityGroupIds: 
                  - !Ref VPCSecGroupID
              - !Ref "AWS::NoValue"
    PipelinePolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: 
                - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
            - Effect: Allow
              Action: 
                - 's3:*'
              Resource:
                - !Sub 'arn:aws:s3:::${PipelineBucket}/*'
                - !Sub 'arn:aws:s3:::${PipelineBucket}'
                - !Sub 'arn:aws:s3:::${CloudformationBucket}/*'
                - !Sub 'arn:aws:s3:::${CloudformationBucket}'
                - !Sub 'arn:aws:s3:::${BuildBucket}/*'
                - !Sub 'arn:aws:s3:::${BuildBucket}'
            - Effect: Allow
              Action:
                - 'iam:PassRole'
              Resource: 
                - '*'
            - Effect: Allow
              Action:
                - 'codepipeline:PutJobSuccessResult'
                - 'codepipeline:PutJobFailureResult'
              Resource:
                - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${AppCode}-${CodePipelineCode}-pipeline
            - Effect: Allow
              Action:
                - 'codecommit:*'
              Resource: 
                - !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${CodeCommitRepoName}'
            - Effect: Allow
              Action:
                - 'codebuild:StartBuild'
                - 'codebuild:BatchGetBuilds'
              Resource: 
                - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AppCode}-${CodePipelineCode}-build-project'
                - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${AppCode}-${CodePipelineCode}-deploy-project'
            - Effect: Allow
              Action:
                - sts:AssumeRole
              Resource: 
                - !Sub arn:aws:iam::${AWS::AccountId}:role/${AppCode}-${CodePipelineCode}-${BuildRoleSuffix}
                - !Ref DeploymentRoleARNAdmin
                - !Ref DeploymentRoleARNShared
                - !Ref DeploymentRoleARNDev
                - !Ref DeploymentRoleARNTest
                - !Ref DeploymentRoleARNProd
            - Effect: Allow
              Action:
                - 'ec2:CreateNetworkInterface'
                - 'ec2:DescribeDhcpOptions'
                - 'ec2:DescribeNetworkInterfaces'
                - 'ec2:DeleteNetworkInterface'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeSecurityGroups'
                - 'ec2:DescribeVpcs'
                - 'ec2:CreateNetworkInterfacePermission'
              Resource: 
                - "*"
    PipelineRole:
      Type: AWS::IAM::Role
      DependsOn: PipelinePolicy
      Properties:
          RoleName: !Sub '${AppCode}-${CodePipelineCode}-CodePipeline-Role'
          AssumeRolePolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action: 
                  - 'sts:AssumeRole'
                  Effect: Allow
                  Principal:
                    Service: 
                      - codepipeline.amazonaws.com
                - Action: 
                  - 'sts:AssumeRole'
                  Effect: Allow
                  Principal:
                    Service: 
                      - codebuild.amazonaws.com
                - Action: 
                  - 'sts:AssumeRole'
                  Effect: Allow
                  Principal:
                    Service: 
                      - lambda.amazonaws.com
          Path: /
          ManagedPolicyArns:
              - !Ref PipelinePolicy
    Pipeline:
        Type: AWS::CodePipeline::Pipeline
        Properties:
            ArtifactStore: 
                Location: !Ref PipelineBucket
                Type: S3
                EncryptionKey:
                  Id: !Ref PipelineBucketKMSKeyAliasARN
                  Type: KMS
            Name: !Sub ${AppCode}-${CodePipelineCode}-pipeline
            RoleArn: !GetAtt PipelineRole.Arn
            Stages:
                - Name: Source
                  Actions:
                    - Name: Source
                      Namespace: Source
                      ActionTypeId:
                        Category: Source
                        Owner: AWS
                        Provider: CodeCommit
                        Version: 1
                      Configuration:
                        RepositoryName: !Ref CodeCommitRepoName
                        BranchName: !Ref CodeCommitBranchName
                      OutputArtifacts:
                        - Name: SourceZip
                      RunOrder: 1
                - Name: Build
                  Actions:
                    - Name: Build
                      Namespace: build
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref BuildProject
                        EnvironmentVariables: !Sub '[
                          {"name":"BUILD_ROLE","value":"${BuildRole.Arn}","type":"PLAINTEXT"},
                          {"name":"APP_CODE","value":"${AppCode}","type":"PLAINTEXT"},
                          {"name":"ENVIRONMENT","value":"${BuildEnvironment}","type":"PLAINTEXT"},
                          {"name":"REGION","value":"${AWS::Region}","type":"PLAINTEXT"}
                          ]'
                      InputArtifacts:
                        - Name: SourceZip
                      OutputArtifacts:
                        - Name: BuildZip
                      RunOrder: 1
                - Name: Approve-Dev
                  Actions:
                    - Name: Approve-Deployment
                      ActionTypeId:
                        Category: Approval
                        Owner: AWS
                        Provider: Manual
                        Version: 1
                      RunOrder: 1                    
                - Name: DeployDev
                  Actions:
                    - Name: DeployDev
                      Namespace: deploydev
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref DeployProject
                        EnvironmentVariables: !Sub '[
                          {"name":"DEPLOYMENT_ROLE","value":"${DeploymentRoleARNDev}","type":"PLAINTEXT"},
                          {"name":"APP_CODE","value":"${AppCode}","type":"PLAINTEXT"},
                          {"name":"ENVIRONMENT","value":"${DevEnvironment}","type":"PLAINTEXT"},
                          {"name":"REGION","value":"${AWS::Region}","type":"PLAINTEXT"},
                          {"name":"COMMIT_ID","value":"#{Source.CommitId}","type":"PLAINTEXT"}
                          ]'
                      InputArtifacts:
                        - Name: BuildZip
                      RunOrder: 1

                - Name: Approve-Test-Prod
                  Actions:
                    - Name: Approve-Deployment
                      ActionTypeId:
                        Category: Approval
                        Owner: AWS
                        Provider: Manual
                        Version: 1
                      RunOrder: 1                    
                - Name: DeployTestProd
                  Actions:
                    - Name: DeployTest
                      Namespace: deploytest
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref DeployProject
                        EnvironmentVariables: !Sub '[
                          {"name":"DEPLOYMENT_ROLE","value":"${DeploymentRoleARNTest}","type":"PLAINTEXT"},
                          {"name":"APP_CODE","value":"${AppCode}","type":"PLAINTEXT"},
                          {"name":"ENVIRONMENT","value":"${TestEnvironment}","type":"PLAINTEXT"},
                          {"name":"REGION","value":"${AWS::Region}","type":"PLAINTEXT"},
                          {"name":"COMMIT_ID","value":"#{Source.CommitId}","type":"PLAINTEXT"}
                          ]'
                      InputArtifacts:
                        - Name: BuildZip
                      RunOrder: 1
                    - Name: DeployProd
                      Namespace: deployprod
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref DeployProject
                        EnvironmentVariables: !Sub '[
                          {"name":"DEPLOYMENT_ROLE","value":"${DeploymentRoleARNProd}","type":"PLAINTEXT"},
                          {"name":"APP_CODE","value":"${AppCode}","type":"PLAINTEXT"},
                          {"name":"ENVIRONMENT","value":"${ProdEnvironment}","type":"PLAINTEXT"},
                          {"name":"REGION","value":"${AWS::Region}","type":"PLAINTEXT"},
                          {"name":"COMMIT_ID","value":"#{Source.CommitId}","type":"PLAINTEXT"}
                          ]'
                      InputArtifacts:
                        - Name: BuildZip
                      RunOrder: 2

                - Name: Approve-Shared-Admin
                  Actions:
                    - Name: Approve-Deployment
                      ActionTypeId:
                        Category: Approval
                        Owner: AWS
                        Provider: Manual
                        Version: 1
                      RunOrder: 1                    
                - Name: DeploySharedAdmin
                  Actions:
                    - Name: DeployShared
                      Namespace: deployshared
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref DeployProject
                        EnvironmentVariables: !Sub '[
                          {"name":"DEPLOYMENT_ROLE","value":"${DeploymentRoleARNShared}","type":"PLAINTEXT"},
                          {"name":"APP_CODE","value":"${AppCode}","type":"PLAINTEXT"},
                          {"name":"ENVIRONMENT","value":"${SharedEnvironment}","type":"PLAINTEXT"},
                          {"name":"REGION","value":"${AWS::Region}","type":"PLAINTEXT"},
                          {"name":"COMMIT_ID","value":"#{Source.CommitId}","type":"PLAINTEXT"}
                          ]'
                      InputArtifacts:
                        - Name: BuildZip
                      RunOrder: 1
                    - Name: DeployAdmin
                      Namespace: deployadmin
                      ActionTypeId:
                        Category: Build
                        Owner: AWS
                        Provider: CodeBuild
                        Version: 1
                      Configuration:
                        ProjectName: !Ref DeployProject
                        EnvironmentVariables: !Sub '[
                          {"name":"DEPLOYMENT_ROLE","value":"${DeploymentRoleARNAdmin}","type":"PLAINTEXT"},
                          {"name":"APP_CODE","value":"${AppCode}","type":"PLAINTEXT"},
                          {"name":"ENVIRONMENT","value":"${AdminEnvironment}","type":"PLAINTEXT"},
                          {"name":"REGION","value":"${AWS::Region}","type":"PLAINTEXT"},
                          {"name":"COMMIT_ID","value":"#{Source.CommitId}","type":"PLAINTEXT"}
                          ]'
                      InputArtifacts:
                        - Name: BuildZip
                      RunOrder: 2
