# Account & Region parameters
export PRIMARY_REGION=ap-southeast-2
export SECONDARY_REGIONS=

export ENVIRONMENT=test
export AWS_ACCOUNT=${TEST_ACCOUNT}
export AWS_REGION=${PRIMARY_REGION}
export REGION_EXTENSION=

# Deployment parameters
export LOGGING_BUCKET=${AWS_ACCOUNT}-logging${REGION_EXTENSION}
export CHANGESET_OPTION=--no-execute-changeset
# export CHANGESET_OPTION=

# CICD parameters
export DEPLOYMENT_ROLE_ARN=
# set deployment-role-arn to use an existing role or to create on in another account separately to the pipeline stack 
export DEPLOYMENT_ROLE_ARN=${DEPLOYMENT_ROLE_ARN_TEST}


# Workload parameters
export DB_ENGINE=mysql
export DB_ENGINE_VERSION=8.0.35
export DB_INSTANCE_CLASS=db.t3.medium
export DB_INSTANCE_NAME=mysql-instance
export DB_NAME=mysqldb
export DB_PORT=3306

export DB_CLUSTER_ENGINE=aurora-mysql
export DB_CLUSTER_ENGINE_VERSION=8.0
export DB_CLUSTER_NAME=aurora-mysql-cluster
export DB_CLUSTER_INSTANCE_NAME=mysql-instance
export DB_CLUSTER_INSTANCE_CLASS=db.t3.medium
# https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.Aurora_Fea_Regions_DB-eng.Feature.ServerlessV2.html
# export DB_CLUSTER_INSTANCE_CLASS=db.serverless
export DB_CLUSTER_MIN_SERVERLESS_SCALING=2
export DB_CLUSTER_MAX_SERVERLESS_SCALING=4

export DB_CLUSTER_ENGINE_POSTGRES=aurora-postgresql
export DB_CLUSTER_ENGINE_VERSION_POSTGRES=15.6
export DB_CLUSTER_NAME_POSTGRES=aurora-postgres-cluster
export DB_CLUSTER_INSTANCE_NAME_POSTGRES=postgres-instance
# export DB_CLUSTER_INSTANCE_CLASS_POSTGRES=db.t3.medium
# https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Concepts.Aurora_Fea_Regions_DB-eng.Feature.ServerlessV2.html
export DB_CLUSTER_INSTANCE_CLASS_POSTGRES=db.serverless
export DB_CLUSTER_MIN_SERVERLESS_SCALING_POSTGRES=1
export DB_CLUSTER_MAX_SERVERLESS_SCALING_POSTGRES=3
export DB_NAME_POSTGRES=postgresdb
export DB_PORT_POSTGRES=5432

export DB_USERNAME=master
export DB_PASSWORD=P!ssw0rd
export MULTI_AZ=false
export STORAGE_TYPE=gp2
export STORAGE_IOPS=1000
export STORAGE_ALLOCATED_GB=20
export STORAGE_ENCRYPTED=false
export STORAGE_KMS_KEY_ARN=
export ENABLE_SECONDARY_INSTANCE=false
export ENABLE_IAM_AUTHENTICATION=true
# RDS PROXY for Aurora Postgres only and IAM Auth will be enabled on the Proxy
# export ENABLE_RDS_PROXY=true
export ENABLE_RDS_PROXY=false
export ENABLE_RDS_PROXY_IAM=true
export DELETE_PROTECTION=false
export DB_BACKUP_AUTO_DELETE=true
export DB_BACKUP_DAYS_KEEP=7
export DB_MAINT_WINDOW=sun:20:00-Sun:20:30

# the DMS base roles have fixed names and can therefore only be created once per account so this parameter allows that to be controlled
export DMS_CREATE_BASE_ROLENAMES=false
export DMS_ENGINE_VERSION=3.5.3
export DMS_INSTANCE_CLASS=dms.t3.medium
export DMS_INSTANCE_NAME=dms-instance
export DMS_SOURCE_ENGINE=mysql
export DMS_SOURCE_ENGINE_PORT=3306
export DMS_SOURCE_SERVER_NAME=mysqldb
export DMS_SOURCE_DB_NAME=mysqldb
export DMS_SOURCE_USERNAME=master
export DMS_SOURCE_PASSWORD=P!ssw0rd
export DMS_TARGET_ENGINE=mysql
export DMS_TARGET_ENGINE_PORT=3306
export DMS_TARGET_SERVER_NAME=mysqldb
export DMS_TARGET_DB_NAME=mysqldb
export DMS_TARGET_USERNAME=master
export DMS_TARGET_PASSWORD=P!ssw0rd

export VPCID=vpc-0fb7e6007f08f4f95
export VPC_CIDR=10.30.0.0/16
export ADMIN_IP_CIDR=1.2.3.4/32
# export PUBLIC_IPV4=false
export PUBLIC_IPV4=true
export DB_SUBNET1=subnet-0c085fed9aa3201a5
export DB_SUBNET2=subnet-057729838d1a85197
export DB_SUBNET3=subnet-0552b679ae24cfaf0

export DB_R53_ALIAS_DOMAIN=${ORG_AWS_DOMAIN}.
export DB_R53_ALIAS_HOSTNAME=${APP_CODE}-${ENVIRONMENT}-mysql-instance
