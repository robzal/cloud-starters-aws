---
apiVersion: v1
kind: Namespace
metadata:
  name: demo-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: demo-nginx
  name: deployment-nginx
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-nginx
  replicas: ${LINUX_TASK_COUNT}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-nginx
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        kubernetes.io/arch: amd64
      containers:
      - image: ${LINUX_TASK_IMAGE}
        imagePullPolicy: Always
        name: app-nginx
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: demo-nginx
  name: service-nginx
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: demo-nginx
  name: ingress-nginx
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports:  '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/certificate-arn: ${LOAD_BALANCER_SSL_CERT}
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: service-nginx
                port:
                  number: 80              
